


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 AREA             PROGRAM, CODE, READONLY
    3 00000000         
    4 00000000                 EXPORT           bcdadd
    5 00000000                 ENTRY
    6 00000000         
    7 00000000         bcdadd
    8 00000000         
    9 00000000 F04F 700E       MOV              r0, #0x02380000
   10 00000004 F04F 6110       MOV              r1, #0x09000000
   11 00000008         
   12 00000008 F000 F801       BL               add
   13 0000000C         
   14 0000000C         
   15 0000000C E7FE    stop    B                stop
   16 0000000E         
   17 0000000E         
   18 0000000E         
   19 0000000E         
   20 0000000E         
   21 0000000E         
   22 0000000E         ;assumes well formatted BCDs (i.e. no nibble over 9)
   23 0000000E         ;adds +ve BCDs of 7 nibbles stored in r0 and r1 and retu
                       rns result in r0
   24 0000000E         add
   25 0000000E B4FC            push             {r2-r7}     ;save context of us
                                                            ed scratch register
                                                            s
   26 00000010         
   27 00000010 F04F 0400       MOV              r4, #0      ;r4 will contain th
                                                            e result
   28 00000014 F04F 0300       MOV              r3, #0      ;r2 and r3 are for 
                                                            additions (r3 conta
                                                            ins result)
   29 00000018 F04F 0200       MOV              r2, #0
   30 0000001C         
   31 0000001C         ;values used for special purposes (shifted left after ev
                       ery nibble addition)
   32 0000001C F04F 050F       MOV              r5, #0x0000000f ;used as mask t
                                                            o extract nibble
   33 00000020 F04F 0609       MOV              r6, #0x00000009 ;used to determ
                                                            ine if sum greater 
                                                            than 9
   34 00000024 F04F 0706       MOV              r7, #0x00000006 ;used to add 6 
                                                            to a sum if greater
                                                             than 9
   35 00000028         
   36 00000028         next
   37 00000028 EA00 0205       AND              r2, r0, r5
   38 0000002C EA01 0305       AND              r3, r1, r5
   39 00000030         
   40 00000030 4413            ADD              r3, r2, r3
   41 00000032         
   42 00000032 441C            ADD              r4, r4, r3
   43 00000034 42B4            CMP              r4, r6      ;perform comparison
                                                             here in order to i
                                                            nclude carry from p
                                                            revious nibble add 
                                                            



ARM Macro Assembler    Page 2 


   44 00000036 BFC8 443C       ADDGT            r4, r7
   45 0000003A         
   46 0000003A         ;shifting of special values
   47 0000003A         ;note that shifting is not done during operation (using 
                       barrel shifter) because the shifted value is not persist
                       ed
   48 0000003A EA4F 1505       LSL              r5, #4
   49 0000003E EA4F 1606       LSL              r6, #4
   50 00000042 EA4F 1707       LSL              r7, #4
   51 00000046         
   52 00000046         ;determine if we need to pursue adding nibbles
   53 00000046 F1B5 4F70       CMP              r5, #0xf0000000
   54 0000004A D1ED            BNE              next        ;when the compariso
                                                            n produces a result
                                                             of 0, don't branch
                                                             again
   55 0000004C         
   56 0000004C         ;determine if overflow, and set overflow bit if the case
                       
   57 0000004C F014 5F80       TST              r4,#0x10000000
   58 00000050 BF18 F044 
              4480             ORRNE            r4,#0x40000000 ;set the overflo
                                                            w bit if there was 
                                                            an overflow
   59 00000056         
   60 00000056 4620            MOV              r0, r4      ;store result in r0
                                                            
   61 00000058 BCFC            pop              {r2-r7}     ;restore context
   62 0000005A         
   63 0000005A 4770            BX               LR
   64 0000005C         
   65 0000005C                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=bcdadd.d
 -obcdadd.o -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\ST\STM32F10x --predef
ine="__EVAL SETA 1" --list=bcdadd.lst bcdadd.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

PROGRAM 00000000

Symbol: PROGRAM
   Definitions
      At line 2 in file bcdadd.s
   Uses
      None
Comment: PROGRAM unused
add 0000000E

Symbol: add
   Definitions
      At line 24 in file bcdadd.s
   Uses
      At line 12 in file bcdadd.s
Comment: add used once
bcdadd 00000000

Symbol: bcdadd
   Definitions
      At line 7 in file bcdadd.s
   Uses
      At line 4 in file bcdadd.s
Comment: bcdadd used once
next 00000028

Symbol: next
   Definitions
      At line 36 in file bcdadd.s
   Uses
      At line 54 in file bcdadd.s
Comment: next used once
stop 0000000C

Symbol: stop
   Definitions
      At line 15 in file bcdadd.s
   Uses
      At line 15 in file bcdadd.s
Comment: stop used once
5 symbols
329 symbols in table
